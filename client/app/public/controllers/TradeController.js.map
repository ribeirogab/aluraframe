{"version":3,"sources":["../../src/controllers/TradeController.js"],"names":["Trade","TradeList","TradeService","DateConverter","Message","MessageView","TradesView","Bind","getNegotiationDao","getExceptionMessage","debounce","controller","TradeController","constructor","inputDate","inputAmount","inputValue","_inputDate","_inputAmount","_inputValue","$","document","querySelector","bind","_tradeList","_message","_service","_currentOrder","_init","dao","negotiations","listAll","forEach","add","negotiation","error","text","event","preventDefault","_createTrade","_resetForm","console","log","delete","deleteAll","import","negotiationsArr","Promise","all","reduce","flatArr","arr","concat","filter","list","some","newNegotiation","equals","existingNegotiation","map","order","column","reverse","a","b","textToDate","value","parseInt","parseFloat","focus","tradeController","currentInstance"],"mappings":"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","file":"TradeController.js","sourcesContent":["import { Trade, TradeList, TradeService } from '../domain/index.js'\nimport { DateConverter, Message, MessageView, TradesView } from '../ui/index.js'\nimport { Bind, getNegotiationDao, getExceptionMessage, debounce, controller } from '../util/index.js'\n\n@controller('#data', '#quantidade', '#valor')\nclass TradeController {\n  constructor(inputDate, inputAmount, inputValue){\n    this._inputDate = inputDate\n    this._inputAmount = inputAmount\n    this._inputValue = inputValue\n    \n    const $ = document.querySelector.bind(document)\n    \n    this._tradeList = new Bind(\n      new TradeList(),\n      new TradesView($('#tradesView')),\n      'add', 'delete', 'import', 'order', 'reverse'\n    )\n\n    this._message = new Bind(\n      new Message(),\n      new MessageView($('#messageView')),\n      'text'\n    )\n\n    this._service = new TradeService()\n    this._currentOrder = ''\n\n    this._init()\n  }\n\n  async _init() {\n    try {\n      const dao = await getNegotiationDao()\n      const negotiations = await dao.listAll()\n      negotiations.forEach(negotiation => {\n        this._tradeList.add(negotiation)\n      })\n    } catch (error) {\n      this._message.text = getExceptionMessage(error)\n    }\n  }\n\n  @debounce(250)\n  async add(event){\n    try {\n      event.preventDefault()\n      const dao = await getNegotiationDao()\n      await dao.add(this._createTrade())\n      this._tradeList.add(this._createTrade())\n      this._message.text = 'Trades successfully added!'\n      this._resetForm()\n      console.log(this._tradeList)\n    } catch (error) {\n      this._message.text = getExceptionMessage(error)\n    }\n  }\n\n  async delete(){\n    try {\n      const dao = await getNegotiationDao()\n      await dao.deleteAll()\n      this._tradeList.delete()\n      this._message.text = 'Successfully deleted!'\n    } catch (error) {\n      this._message.text = getExceptionMessage(error)\n    }\n  }\n\n  @debounce(1000)\n  async import(){\n    try {\n      const negotiationsArr = await Promise.all([\n          this._service.import('semana'),\n          this._service.import('anterior'),\n          this._service.import('retrasada')\n        ])\n      negotiationsArr\n        .reduce((flatArr, arr) => flatArr.concat(arr), [])\n        .filter(newNegotiation => !this._tradeList.list.some(existingNegotiation => newNegotiation.equals(existingNegotiation)))\n        .map(negotiation => this._tradeList.add(negotiation))\n      this._message.text = 'Trades imported successfully'\n      } catch (error) {\n        this._message.text = getExceptionMessage(error)\n      }\n  }\n\n  order(column){\n    if (this._currentOrder === column) {\n      this._tradeList.reverse();\n    } else {\n      this._tradeList.order((a, b) => a[column] - b[column]);\n    }\n    this._currentOrder = column;\n  }\n\n  _createTrade(){\n    return new Trade(\n      DateConverter.textToDate(this._inputDate.value),\n      parseInt(this._inputAmount.value),\n      parseFloat(this._inputValue.value)\n    )\n  }\n\n  _resetForm(){\n    this._inputDate.value = '16/09/2000'\n    this._inputAmount.value = 7\n    this._inputValue.value = 5\n    this._inputDate.focus()\n  }\n}\n\nconst tradeController = new TradeController\n\nexport function currentInstance(){\n  return tradeController\n}"]}