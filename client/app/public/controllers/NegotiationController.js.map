{"version":3,"sources":["../../src/controllers/NegotiationController.js"],"names":["Negotiation","NegotiationList","NegotiationService","DateConverter","InvalidDateException","Message","MessageView","NegotiationsView","Bind","getNegotiationDao","NegotiationController","constructor","$","document","querySelector","bind","_inputDate","_inputAmount","_inputValue","_negotiationList","_message","_service","_currentOrder","_init","then","dao","listAll","negotiations","forEach","negotiation","add","catch","error","console","log","event","preventDefault","_createNegotiation","text","_resetForm","message","delete","deleteAll","msg","import","Promise","all","negotiationsArr","reduce","flatArr","arr","concat","filter","newNegotiation","list","some","existingNegotiation","equals","map","order","column","reverse","a","b","textToDate","value","parseInt","parseFloat","focus","negotiationController","currentInstance"],"mappings":"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","file":"NegotiationController.js","sourcesContent":["import { Negotiation, NegotiationList, NegotiationService } from '../domain/index.js'\nimport { DateConverter, InvalidDateException, Message, MessageView, NegotiationsView } from '../ui/index.js'\nimport { Bind, getNegotiationDao } from '../util/index.js'\n\n\nclass NegotiationController {\n  constructor(){\n    const $ = document.querySelector.bind(document)\n    \n    this._inputDate = $('#data')\n    this._inputAmount = $('#quantidade')\n    this._inputValue = $('#valor')\n    \n    this._negotiationList = new Bind(\n      new NegotiationList(),\n      new NegotiationsView($('#negotiationsView')),\n      'add', 'delete', 'import', 'order', 'reverse'\n    )\n\n    this._message = new Bind(\n      new Message(),\n      new MessageView($('#messageView')),\n      'text'\n    )\n\n    this._service = new NegotiationService()\n    this._currentOrder = ''\n\n    this._init()\n  }\n\n  _init(){\n    getNegotiationDao()\n      .then(dao => dao.listAll())\n        .then(negotiations => \n          negotiations.forEach(negotiation =>\n            this._negotiationList.add(negotiation)\n            )\n        )\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  add(event){\n    event.preventDefault()\n    \n    getNegotiationDao()\n      .then(dao => dao.add(this._createNegotiation()))\n        .then(() => {\n          this._negotiationList.add(this._createNegotiation())\n          this._message.text = 'Negotiations successfully added!'\n          this._resetForm()\n          console.log(this._negotiationList)\n        })\n      .catch(error => {\n        if (error instanceof InvalidDateException) {\n          this._message.text = error.message\n        } else {\n          console.log(error)\n        }\n      })\n  }\n\n  delete(){\n    getNegotiationDao()\n      .then(dao => dao.deleteAll())\n        .then(msg => {\n          this._negotiationList.delete()\n          this._message.text = msg\n        })\n  }\n\n  import(){\n    Promise.all([\n      this._service.import('semana'),\n      this._service.import('anterior'),\n      this._service.import('retrasada')\n    ]).then(negotiationsArr => {\n        negotiationsArr.reduce((flatArr, arr) => flatArr.concat(arr), [])\n          .filter(newNegotiation => !this._negotiationList.list.some(existingNegotiation => newNegotiation.equals(existingNegotiation)))\n          .map(negotiation => this._negotiationList.add(negotiation))\n        \n        this._message.text = 'Negotiations imported successfully'\n      })\n      .catch(error => {\n        console.error(error)\n        this._message.text = error\n      })\n  }\n\n  order(column){\n    if (this._currentOrder === column) {\n      this._negotiationList.reverse();\n    } else {\n      this._negotiationList.order((a, b) => a[column] - b[column]);\n    }\n    this._currentOrder = column;\n  }\n\n  _createNegotiation(){\n    return new Negotiation(\n      DateConverter.textToDate(this._inputDate.value),\n      parseInt(this._inputAmount.value),\n      parseFloat(this._inputValue.value)\n    )\n  }\n\n  _resetForm(){\n    this._inputDate.value = ''\n    this._inputAmount.value = 7\n    this._inputValue.value = 5\n\n    this._inputDate.focus()\n  }\n}\n\nconst negotiationController = new NegotiationController\n\nexport function currentInstance(){\n  return negotiationController\n}"]}