{"version":3,"sources":["../../src/util/HttpService.js"],"names":["HttpService","get","url","res","_handleErrors","fetch","json","post","data","headers","method","body","JSON","stringify","ok","Error","statusText"],"mappings":";;;;;;AAAO,YAAMA,WAAN,CAAiB;AACtB,cAAMC,GAAN,CAAUC,GAAV,EAAc;AACZ,gBAAMC,MAAM,MAAM,KAAKC,aAAL,EAAmB,MAAMC,MAAMH,GAAN,CAAzB,EAAlB;AACA,iBAAOC,IAAIG,IAAJ,EAAP;AACD;;AAED,cAAMC,IAAN,CAAWL,GAAX,EAAgBM,IAAhB,EAAqB;AACnB,gBAAML,MAAM,MAAME,MAAMH,GAAN,EAAW;AAC3BO,qBAAS,EAAE,gBAAgB,kBAAlB,EADkB;AAE3BC,oBAAQ,MAFmB;AAG3BC,kBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHqB,WAAX,CAAlB;AAKA,iBAAO,MAAM,KAAKJ,aAAL,CAAmBD,GAAnB,CAAb;AACD;;AAED,cAAMC,aAAN,CAAoBD,GAApB,EAAwB;AACtB,cAAI,CAACA,IAAIW,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUZ,IAAIa,UAAd,CAAN;AACb,iBAAOb,GAAP;AACD;AAlBqB","file":"HttpService.js","sourcesContent":["export class HttpService{\n  async get(url){\n    const res = await this._handleErrors(await fetch(url))\n    return res.json()\n  }\n\n  async post(url, data){\n    const res = await fetch(url, {\n      headers: { 'Content-type': 'application/json' },\n      method: 'post',\n      body: JSON.stringify(data)\n    })\n    return await this._handleErrors(res)\n  }\n\n  async _handleErrors(res){\n    if (!res.ok) throw new Error(res.statusText) \n    return res\n  }\n}"]}